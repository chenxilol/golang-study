// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: manyService.proto

package many_service_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int32 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *BytesRequest) Reset() {
	*x = BytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manyService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesRequest) ProtoMessage() {}

func (x *BytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manyService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesRequest.ProtoReflect.Descriptor instead.
func (*BytesRequest) Descriptor() ([]byte, []int) {
	return file_manyService_proto_rawDescGZIP(), []int{0}
}

func (x *BytesRequest) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type BytesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSort []int32 `protobuf:"varint,1,rep,packed,name=dataSort,proto3" json:"dataSort,omitempty"`
}

func (x *BytesResponse) Reset() {
	*x = BytesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_manyService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesResponse) ProtoMessage() {}

func (x *BytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manyService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesResponse.ProtoReflect.Descriptor instead.
func (*BytesResponse) Descriptor() ([]byte, []int) {
	return file_manyService_proto_rawDescGZIP(), []int{1}
}

func (x *BytesResponse) GetDataSort() []int32 {
	if x != nil {
		return x.DataSort
	}
	return nil
}

var File_manyService_proto protoreflect.FileDescriptor

var file_manyService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22, 0x22, 0x0a, 0x0c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0d, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x72, 0x74, 0x32, 0x5d, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5f, 0x0a, 0x0f, 0x4d, 0x61, 0x6e, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x6e, 0x65, 0x31, 0x12, 0x4c, 0x0a, 0x05, 0x53, 0x6f, 0x72,
	0x74, 0x31, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2f, 0x6d, 0x61, 0x6e, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manyService_proto_rawDescOnce sync.Once
	file_manyService_proto_rawDescData = file_manyService_proto_rawDesc
)

func file_manyService_proto_rawDescGZIP() []byte {
	file_manyService_proto_rawDescOnce.Do(func() {
		file_manyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_manyService_proto_rawDescData)
	})
	return file_manyService_proto_rawDescData
}

var file_manyService_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_manyService_proto_goTypes = []interface{}{
	(*BytesRequest)(nil),  // 0: many_service_grpc.BytesRequest
	(*BytesResponse)(nil), // 1: many_service_grpc.BytesResponse
}
var file_manyService_proto_depIdxs = []int32{
	0, // 0: many_service_grpc.ManyServiceOne.Sort:input_type -> many_service_grpc.BytesRequest
	0, // 1: many_service_grpc.ManyServiceOne1.Sort1:input_type -> many_service_grpc.BytesRequest
	1, // 2: many_service_grpc.ManyServiceOne.Sort:output_type -> many_service_grpc.BytesResponse
	1, // 3: many_service_grpc.ManyServiceOne1.Sort1:output_type -> many_service_grpc.BytesResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_manyService_proto_init() }
func file_manyService_proto_init() {
	if File_manyService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_manyService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_manyService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_manyService_proto_goTypes,
		DependencyIndexes: file_manyService_proto_depIdxs,
		MessageInfos:      file_manyService_proto_msgTypes,
	}.Build()
	File_manyService_proto = out.File
	file_manyService_proto_rawDesc = nil
	file_manyService_proto_goTypes = nil
	file_manyService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManyServiceOneClient is the client API for ManyServiceOne service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManyServiceOneClient interface {
	Sort(ctx context.Context, in *BytesRequest, opts ...grpc.CallOption) (*BytesResponse, error)
}

type manyServiceOneClient struct {
	cc grpc.ClientConnInterface
}

func NewManyServiceOneClient(cc grpc.ClientConnInterface) ManyServiceOneClient {
	return &manyServiceOneClient{cc}
}

func (c *manyServiceOneClient) Sort(ctx context.Context, in *BytesRequest, opts ...grpc.CallOption) (*BytesResponse, error) {
	out := new(BytesResponse)
	err := c.cc.Invoke(ctx, "/many_service_grpc.ManyServiceOne/Sort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManyServiceOneServer is the server API for ManyServiceOne service.
type ManyServiceOneServer interface {
	Sort(context.Context, *BytesRequest) (*BytesResponse, error)
}

// UnimplementedManyServiceOneServer can be embedded to have forward compatible implementations.
type UnimplementedManyServiceOneServer struct {
}

func (*UnimplementedManyServiceOneServer) Sort(context.Context, *BytesRequest) (*BytesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sort not implemented")
}

func RegisterManyServiceOneServer(s *grpc.Server, srv ManyServiceOneServer) {
	s.RegisterService(&_ManyServiceOne_serviceDesc, srv)
}

func _ManyServiceOne_Sort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BytesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManyServiceOneServer).Sort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/many_service_grpc.ManyServiceOne/Sort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManyServiceOneServer).Sort(ctx, req.(*BytesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManyServiceOne_serviceDesc = grpc.ServiceDesc{
	ServiceName: "many_service_grpc.ManyServiceOne",
	HandlerType: (*ManyServiceOneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sort",
			Handler:    _ManyServiceOne_Sort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manyService.proto",
}

// ManyServiceOne1Client is the client API for ManyServiceOne1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManyServiceOne1Client interface {
	Sort1(ctx context.Context, in *BytesRequest, opts ...grpc.CallOption) (*BytesResponse, error)
}

type manyServiceOne1Client struct {
	cc grpc.ClientConnInterface
}

func NewManyServiceOne1Client(cc grpc.ClientConnInterface) ManyServiceOne1Client {
	return &manyServiceOne1Client{cc}
}

func (c *manyServiceOne1Client) Sort1(ctx context.Context, in *BytesRequest, opts ...grpc.CallOption) (*BytesResponse, error) {
	out := new(BytesResponse)
	err := c.cc.Invoke(ctx, "/many_service_grpc.ManyServiceOne1/Sort1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManyServiceOne1Server is the server API for ManyServiceOne1 service.
type ManyServiceOne1Server interface {
	Sort1(context.Context, *BytesRequest) (*BytesResponse, error)
}

// UnimplementedManyServiceOne1Server can be embedded to have forward compatible implementations.
type UnimplementedManyServiceOne1Server struct {
}

func (*UnimplementedManyServiceOne1Server) Sort1(context.Context, *BytesRequest) (*BytesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sort1 not implemented")
}

func RegisterManyServiceOne1Server(s *grpc.Server, srv ManyServiceOne1Server) {
	s.RegisterService(&_ManyServiceOne1_serviceDesc, srv)
}

func _ManyServiceOne1_Sort1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BytesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManyServiceOne1Server).Sort1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/many_service_grpc.ManyServiceOne1/Sort1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManyServiceOne1Server).Sort1(ctx, req.(*BytesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManyServiceOne1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "many_service_grpc.ManyServiceOne1",
	HandlerType: (*ManyServiceOne1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sort1",
			Handler:    _ManyServiceOne1_Sort1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manyService.proto",
}
